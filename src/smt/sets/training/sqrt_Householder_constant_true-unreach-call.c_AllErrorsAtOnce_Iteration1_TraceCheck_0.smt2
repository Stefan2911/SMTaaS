(set-info :smt-lib-version 2.6)
(set-logic QF_BVFPLRA)
(set-info :source "|
Generated by the tool Ultimate Automizer [1,2] which implements
an automata theoretic approach [3] to software verification.

This SMT script belongs to a set of SMT scripts that was generated by
applying Ultimate Automizer to benchmarks [4] from the SV-COMP 2019 [5,6].
This script might _not_ contain all SMT commands that are used by
Ultimate Automizer. In order to satisfy the restrictions of
the SMT-COMP we have to drop e.g., the commands for getting
values (resp. models), unsatisfiable cores and interpolants.

2019-04-27, Matthias Heizmann (heizmann@informatik.uni-freiburg.de)

[1] https://ultimate.informatik.uni-freiburg.de/automizer/
[2] Matthias Heizmann, Yu-Fang Chen, Daniel Dietsch, Marius Greitschus,
     Jochen Hoenicke, Yong Li, Alexander Nutz, Betim Musa, Christian
     Schilling, Tanja Schindler, Andreas Podelski: Ultimate Automizer
     and the Search for Perfect Interpolants - (Competition Contribution).
     TACAS (2) 2018: 447-451
[3] Matthias Heizmann, Jochen Hoenicke, Andreas Podelski: Software Model
     Checking for People Who Love Automata. CAV 2013:36-52
[4] https://github.com/sosy-lab/sv-benchmarks
[5] Dirk Beyer: Automatic Verification of C and Java Programs: SV-COMP 2019.
     TACAS (3) 2019: 133-155
[6] https://sv-comp.sosy-lab.org/2019/
|")
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")
(set-info :status unsat)
(declare-fun ~_EPS~0_-1 () (_ FloatingPoint 11 53))
(declare-fun currentRoundingMode_-1 () RoundingMode)
(declare-fun |old(~_EPS~0)_0| () (_ FloatingPoint 11 53))
(declare-fun |old(currentRoundingMode)_0| () RoundingMode)
(declare-fun ~_EPS~0_0 () (_ FloatingPoint 11 53))
(declare-fun currentRoundingMode_0 () RoundingMode)
(declare-fun ~_EPS~0_1 () (_ FloatingPoint 11 53))
(declare-fun currentRoundingMode_1 () RoundingMode)
(declare-fun main_~d~0_5 () (_ FloatingPoint 11 53))
(declare-fun |SqrtR_#in~Input_7| () (_ FloatingPoint 11 53))
(declare-fun SqrtR_~Input_8 () (_ FloatingPoint 11 53))
(declare-fun SqrtR_~xn~0_9 () (_ FloatingPoint 11 53))
(declare-fun SqrtR_~cond~0_10 () (_ BitVec 32))
(declare-fun SqrtR_~linf~0_10 () (_ FloatingPoint 11 53))
(declare-fun SqrtR_~i~0_10 () (_ BitVec 32))
(declare-fun SqrtR_~lsup~0_10 () (_ FloatingPoint 11 53))
(declare-fun SqrtR_~residu~0_10 () (_ FloatingPoint 11 53))
(declare-fun SqrtR_~xnp1~0_10 () (_ FloatingPoint 11 53))
(declare-fun |SqrtR_#res_12| () (_ FloatingPoint 11 53))
(declare-fun |main_#t~ret2_14| () (_ FloatingPoint 11 53))
(declare-fun main_~r~0_15 () (_ FloatingPoint 11 53))
(declare-fun |__VERIFIER_assert_#in~cond_16| () (_ BitVec 32))
(declare-fun __VERIFIER_assert_~cond_17 () (_ BitVec 32))
(assert (not false))
(assert (= currentRoundingMode_0 |old(currentRoundingMode)_0|))
(assert (= ~_EPS~0_0 |old(~_EPS~0)_0|))
(assert (= |old(~_EPS~0)_0| ~_EPS~0_-1))
(assert (= |old(currentRoundingMode)_0| currentRoundingMode_-1))
(assert (= ~_EPS~0_1 ((_ to_fp 11 53) currentRoundingMode_1 (/ 1.0 1000000.0))))
(assert (= currentRoundingMode_1 roundNearestTiesToEven))
(assert (= main_~d~0_5 ((_ to_fp 11 53) currentRoundingMode_1 1.0)))
(assert (fp.leq main_~d~0_5 ((_ to_fp 11 53) currentRoundingMode_1 20.0)))
(assert (= |SqrtR_#in~Input_7| main_~d~0_5))
(assert (= SqrtR_~Input_8 |SqrtR_#in~Input_7|))
(assert (fp.leq SqrtR_~Input_8 ((_ to_fp 11 53) currentRoundingMode_1 1.0)))
(assert (= SqrtR_~xn~0_9 ((_ to_fp 11 53) currentRoundingMode_1 1.0)))
(assert (= SqrtR_~i~0_10 (_ bv0 32)))
(assert (= SqrtR_~cond~0_10 (ite (or (fp.gt SqrtR_~residu~0_10 SqrtR_~lsup~0_10) (fp.lt SqrtR_~residu~0_10 SqrtR_~linf~0_10)) (_ bv1 32) (_ bv0 32))))
(assert (= SqrtR_~linf~0_10 (fp.neg SqrtR_~lsup~0_10)))
(assert (= SqrtR_~residu~0_10 (fp.mul currentRoundingMode_1 (fp.mul currentRoundingMode_1 ((_ to_fp 11 53) currentRoundingMode_1 2.0) ~_EPS~0_1) (fp.add currentRoundingMode_1 SqrtR_~xn~0_9 SqrtR_~xnp1~0_10))))
(assert (= SqrtR_~xnp1~0_10 SqrtR_~xn~0_9))
(assert (= SqrtR_~lsup~0_10 (fp.mul currentRoundingMode_1 ~_EPS~0_1 (fp.add currentRoundingMode_1 SqrtR_~xn~0_9 SqrtR_~xnp1~0_10))))
(assert (= SqrtR_~cond~0_10 (_ bv0 32)))
(assert (= |SqrtR_#res_12| (fp.div currentRoundingMode_1 ((_ to_fp 11 53) currentRoundingMode_1 1.0) SqrtR_~xnp1~0_10)))
(assert (= |main_#t~ret2_14| |SqrtR_#res_12|))
(assert (= main_~r~0_15 |main_#t~ret2_14|))
(assert (= |__VERIFIER_assert_#in~cond_16| (ite (and (fp.geq main_~r~0_15 ((_ to_fp 11 53) currentRoundingMode_1 1.0)) (fp.leq main_~r~0_15 ((_ to_fp 11 53) currentRoundingMode_1 5.0))) (_ bv1 32) (_ bv0 32))))
(assert (= __VERIFIER_assert_~cond_17 |__VERIFIER_assert_#in~cond_16|))
(assert (= __VERIFIER_assert_~cond_17 (_ bv0 32)))
(check-sat)
(exit)
